// Generated by view binder compiler. Do not edit!
package com.marcos.quizapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.marcos.quizapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText emailEditText;

  @NonNull
  public final TextInputLayout emailInputLayout;

  @NonNull
  public final TextView forgotPasswordTextView;

  @NonNull
  public final TextView noAccountTextView;

  @NonNull
  public final TextInputEditText passwordEditText;

  @NonNull
  public final TextInputLayout passwordInputLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView registerTextView;

  @NonNull
  public final CheckBox rememberMeCheckBox;

  @NonNull
  public final Button signInButton;

  @NonNull
  public final TextView subtitleTextView;

  @NonNull
  public final TextView titleTextView;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText emailEditText, @NonNull TextInputLayout emailInputLayout,
      @NonNull TextView forgotPasswordTextView, @NonNull TextView noAccountTextView,
      @NonNull TextInputEditText passwordEditText, @NonNull TextInputLayout passwordInputLayout,
      @NonNull ProgressBar progressBar, @NonNull TextView registerTextView,
      @NonNull CheckBox rememberMeCheckBox, @NonNull Button signInButton,
      @NonNull TextView subtitleTextView, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.emailEditText = emailEditText;
    this.emailInputLayout = emailInputLayout;
    this.forgotPasswordTextView = forgotPasswordTextView;
    this.noAccountTextView = noAccountTextView;
    this.passwordEditText = passwordEditText;
    this.passwordInputLayout = passwordInputLayout;
    this.progressBar = progressBar;
    this.registerTextView = registerTextView;
    this.rememberMeCheckBox = rememberMeCheckBox;
    this.signInButton = signInButton;
    this.subtitleTextView = subtitleTextView;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emailEditText;
      TextInputEditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.emailInputLayout;
      TextInputLayout emailInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailInputLayout == null) {
        break missingId;
      }

      id = R.id.forgotPasswordTextView;
      TextView forgotPasswordTextView = ViewBindings.findChildViewById(rootView, id);
      if (forgotPasswordTextView == null) {
        break missingId;
      }

      id = R.id.noAccountTextView;
      TextView noAccountTextView = ViewBindings.findChildViewById(rootView, id);
      if (noAccountTextView == null) {
        break missingId;
      }

      id = R.id.passwordEditText;
      TextInputEditText passwordEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditText == null) {
        break missingId;
      }

      id = R.id.passwordInputLayout;
      TextInputLayout passwordInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordInputLayout == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.registerTextView;
      TextView registerTextView = ViewBindings.findChildViewById(rootView, id);
      if (registerTextView == null) {
        break missingId;
      }

      id = R.id.rememberMeCheckBox;
      CheckBox rememberMeCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (rememberMeCheckBox == null) {
        break missingId;
      }

      id = R.id.signInButton;
      Button signInButton = ViewBindings.findChildViewById(rootView, id);
      if (signInButton == null) {
        break missingId;
      }

      id = R.id.subtitleTextView;
      TextView subtitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (subtitleTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, emailEditText, emailInputLayout,
          forgotPasswordTextView, noAccountTextView, passwordEditText, passwordInputLayout,
          progressBar, registerTextView, rememberMeCheckBox, signInButton, subtitleTextView,
          titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
